import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables

import m_iqn
import networks_New

MunchausenIQNAgent.observation_shape = %gym_lib.CARTPOLE_OBSERVATION_SHAPE
MunchausenIQNAgent.observation_dtype = %gym_lib.CARTPOLE_OBSERVATION_DTYPE
MunchausenIQNAgent.stack_size = %gym_lib.CARTPOLE_STACK_SIZE
MunchausenIQNAgent.network = @networks_New.ImplicitQuantileNetwork_New #@gym_lib.CartpoleDQNNetwork
MunchausenIQNAgent.gamma = 0.99
MunchausenIQNAgent.update_horizon = 1
MunchausenIQNAgent.min_replay_history = 500
MunchausenIQNAgent.update_period = 4
MunchausenIQNAgent.target_update_period = 100
MunchausenIQNAgent.epsilon_fn = @dqn_agent.identity_epsilon
MunchausenIQNAgent.tf_device = '/cpu:*'  # use '/cpu:*' for non-GPU version
#MunchausenIQNAgent.optimizer_type = 'adam'
#MunchausenIQNAgent.optimizer_lr = 0.001

MunchausenIQNAgent.tau = 0.03 # 1st 0.03 , 0.2, 0.6
MunchausenIQNAgent.alpha = 0.9 # 1st 0.9 -> 1, 0.9
MunchausenIQNAgent.clip_value_min = -1 # 1st -1 -> -10, -5
#MunchausenDQNAgent.interact = 'greedy'

dqn/tf.train.AdamOptimizer.learning_rate = 0.001
dqn/tf.train.AdamOptimizer.epsilon = 0.0003125
#create_optimizer = @dqn_agent.create_optimizer
#create_optimizer.learning_rate = 0.001
#create_optimizer.eps = 3.125e-4

create_gym_environment.environment_name = 'CartPole'
create_gym_environment.version = 'v0'
TrainRunner.create_environment_fn = @gym_lib.create_gym_environment

Runner.num_iterations = 30
Runner.training_steps = 1000
Runner.max_steps_per_episode = 200

WrappedReplayBuffer.replay_capacity = 50000
WrappedReplayBuffer.batch_size = 128
