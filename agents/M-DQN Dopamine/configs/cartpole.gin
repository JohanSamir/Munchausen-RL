import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables


MunchausenDQNAgent.observation_shape = %gym_lib.CARTPOLE_OBSERVATION_SHAPE
MunchausenDQNAgent.observation_dtype = %gym_lib.CARTPOLE_OBSERVATION_DTYPE
MunchausenDQNAgent.stack_size = %gym_lib.CARTPOLE_STACK_SIZE
MunchausenDQNAgent.network = @gym_lib.CartpoleDQNNetwork
MunchausenDQNAgent.gamma = 0.99
MunchausenDQNAgent.update_horizon = 1
MunchausenDQNAgent.min_replay_history = 500
MunchausenDQNAgent.update_period = 4
MunchausenDQNAgent.target_update_period = 100
MunchausenDQNAgent.epsilon_fn = @dqn_agent.identity_epsilon
MunchausenDQNAgent.tf_device = '/cpu:*'  # use '/cpu:*' for non-GPU version
MunchausenDQNAgent.optimizer_type = 'adam'
MunchausenDQNAgent.optimizer_lr = 0.001

MunchausenDQNAgent.tau = 100#0.2 # 0.03  # Original 0.03
MunchausenDQNAgent.alpha = 1#0.9 # 1 Best #0.9 #0.4 # Original 0.9 
MunchausenDQNAgent.clip_value_min = -1e3#-1 # -10 Best #-1 #-1 # Original-1
MunchausenDQNAgent.interact = 'stochastic'#'stochastic'#'greedy'

dqn/tf.train.AdamOptimizer.learning_rate = 0.001
dqn/tf.train.AdamOptimizer.epsilon = 0.0003125
#create_optimizer = @dqn_agent.create_optimizer
#create_optimizer.learning_rate = 0.001
#create_optimizer.eps = 3.125e-4

create_gym_environment.environment_name = 'CartPole'
create_gym_environment.version = 'v0'
TrainRunner.create_environment_fn = @gym_lib.create_gym_environment

#Runner.num_iterations = 30#500
#Runner.training_steps = 1000
#Runner.max_steps_per_episode = 200#500

Runner.num_iterations = 30
Runner.training_steps = 1000
Runner.max_steps_per_episode = 200

WrappedReplayBuffer.replay_capacity = 50000
WrappedReplayBuffer.batch_size = 128
